<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace = "com.cqjtu.bysj.mapper.ChapterMapper">
    <insert id="createChapter"  parameterType="com.cqjtu.bysj.entity.Chapter"
            useGeneratedKeys="true" keyProperty="chapterId" >
    insert into chapter
    (creator_job_no,
     chapter_order,
     chapter_name,
     chapter_content,

     course_id)
    values (#{creatorJobNo,jdbcType=VARCHAR},
    #{chapterOrder,jdbcType=INTEGER},
    #{chapterName,jdbcType=VARCHAR},
    #{chapterContent,jdbcType=VARCHAR},
    #{courseId,jdbcType=INTEGER})

    </insert>

    <!--<update id="updateCourse" parameterType="com.cqjtu.bysj.entity.Course"-->
            <!--useGeneratedKeys="true" keyProperty="courseId">-->
        <!--update course-->
        <!--set course_name = #{courseName},-->
        <!--course_kind = #{courseKind},-->
        <!--course_intro = #{courseIntro},-->
        <!--time_begin = #{timeBegin},-->
        <!--time_end = #{timeEnd}-->
        <!--<where>-->
            <!--<if test="courseId != null and courseId !=''" >-->
                <!--and  id = #{courseId}-->
            <!--</if>-->
        <!--</where>-->
    <!--</update>-->

    <select id="getChapterList" resultType="com.cqjtu.bysj.entity.Chapter" parameterType="integer">
        select
        id chapterId,
        chapter_name chapterName,
        chapter_order chapterOrder,
        chapter_content chapterContent,
        create_time createTime


        from chapter
        <where>
            <if test="courseId != null and courseId !=''" >
                and  course_id = #{courseId}
            </if>
        </where>
    </select>
    <!--<select id="getAuthByJobNo" resultType="com.cqjtu.bysj.entity.Role" parameterType="string">-->
    <!--select-->
    <!--r.id roleId,-->
    <!--r.role_name roleName-->
    <!--from sys_user_roles s-->
    <!--left join sys_role r-->

    <!--on s.roles_id = r.id-->
    <!--<where>-->
    <!--<if test="jobNo != null and jobNo !=''" >-->
    <!--and  job_no = #{jobNo}-->
    <!--</if>-->
    <!--</where>-->
    <!--</select>-->
    <!--<select id="findUserByJobNo" resultType="com.cqjtu.bysj.entity.AdminUser" parameterType="string">-->
    <!--select-->
    <!--id userId,-->
    <!--username,-->
    <!--job_no jobNo,-->
    <!--password,-->
    <!--email,-->
    <!--phone,-->
    <!--sex,-->
    <!--birthday-->
    <!--from admin_user-->
    <!--<where>-->
    <!--<if test="jobNo != null and jobNo !=''" >-->
    <!--and  job_no = #{jobNo}-->
    <!--</if>-->
    <!--</where>-->
    <!--</select>-->

    <!--<select id="getArticleTotalNum" resultType="int" parameterType="long">-->
    <!--select count(title)-->
    <!--from article-->
    <!--where user_id = #{userId}-->




    <!--</select>-->



    <delete id="deleteChapter" parameterType="long">
        delete from chapter
        <if test="chapterId !='' and chapterId !=null">
            where id = #{chapterId}
        </if>
    </delete>

    <delete id="deleteChapterByCourseId" parameterType="integer">
        delete from chapter
        <if test="courseId !='' and courseId !=null">
            where course_id = #{courseId}
        </if>
    </delete>

    <!--<select id="viewArticleById" parameterType="long" resultType="com.spring.demo.entity.Article">-->
    <!--select title ,-->
    <!--a.id articleId,-->
    <!--content,-->
    <!--category_id categoryId,-->
    <!--username authorName,-->
    <!--user_id userId-->
    <!--from-->
    <!--article a-->
    <!--left join user u-->
    <!--on a.user_id = u.id-->
    <!--where a.id = #{articleId}-->

    <!--</select>-->

    <!--<select id="showArticleTitle" parameterType="java.util.List" resultType="com.spring.demo.entity.Article">-->
    <!--SELECT title,-->
    <!--a.id articleId,-->
    <!--u.username authorName,-->
    <!--create_time createTime,-->
    <!--comment_num commentNum-->
    <!--from-->
    <!--article a-->
    <!--left join user u-->
    <!--on a.user_id = u.id-->
    <!--where user_id in-->
    <!--<if test="userIdList != null and userIdList.size() != 0">-->
    <!--<foreach item="item" index="index" collection="userIdList"-->
    <!--open="(" separator="," close=")">-->
    <!--#{item}-->
    <!--</foreach>-->
    <!--</if>-->
    <!--order by a.create_time desc-->

    <!--</select>-->

    <!--<select id="getAllArticleList" parameterType="long" resultType="com.spring.demo.entity.Article">-->
    <!--select-->
    <!--a.id articleId,-->
    <!--title,-->
    <!--a.create_time createTime,-->
    <!--a.comment_num commentNum-->
    <!--from article a-->

    <!--where a.user_id = #{userId}-->
    <!--order by a.create_time desc-->

    <!--</select>-->

    <!--<update id="updateCommentNum" parameterType="long">-->
    <!--update article-->
    <!--set comment_num = comment_num + 1-->
    <!--where id = #{articleId}-->
    <!--</update>-->

    <!--<update id="restoreCommentNum" parameterType="long">-->
    <!--update article-->
    <!--set comment_num = comment_num - 1-->
    <!--where id = #{articleId}-->
    <!--</update>-->
    <!--<select id="getArticleIdByCommentId" parameterType="long" resultType="long">-->
    <!--select article_id-->
    <!--from comments-->
    <!--where id = #{commentId}-->
    <!--</select>-->





</mapper>
